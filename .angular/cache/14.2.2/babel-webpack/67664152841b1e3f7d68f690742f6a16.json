{"ast":null,"code":"import { Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"../main-router/main-router.component\";\n\nfunction SideNavComponent_button_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SideNavComponent_button_37_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 15);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SideNavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver; // auto-generated\n\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay()); // auto-generated\n\n    this.matRippleColor = \"#d9d9d9af\";\n  }\n\n}\n\nSideNavComponent.ɵfac = function SideNavComponent_Factory(t) {\n  return new (t || SideNavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nSideNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SideNavComponent,\n  selectors: [[\"app-side-nav\"]],\n  decls: 42,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"id\", \"about-me\"], [\"mat-list-item\", \"\", \"matRipple\", \"\", \"matRippleColor\", \"this.matRippleColor\", \"routerLink\", \"about-me/intro\"], [\"mat-list-item\", \"\", \"matRipple\", \"\", \"matRippleColor\", \"this.matRippleColor\", \"routerLink\", \"about-me/knowlege\"], [\"id\", \"load-portfolio\"], [\"mat-list-item\", \"\", \"matRipple\", \"\", \"matRippleColor\", \"this.matRippleColor\", \"routerLink\", \"load-portfolio/projects\"], [\"mat-list-item\", \"\", \"matRipple\", \"\", \"matRippleColor\", \"this.matRippleColor\", \"routerLink\", \"#\"], [\"id\", \"activate-fun\"], [\"mat-list-item\", \"\", \"matRipple\", \"\", \"matRippleColor\", \"this.matRippleColor\", \"routerLink\", \"have-fun/games\"], [1, \"side-nav-header\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", \"class\", \"side-nav-header\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"under-header\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 1, \"side-nav-header\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function SideNavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\", 3);\n      i0.ɵɵtext(7, \"AboutMe()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 4)(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"face\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" \\u00A0 introduction \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 5)(14, \"mat-icon\");\n      i0.ɵɵtext(15, \"memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" \\u00A0 knowlege \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"mat-toolbar\", 6);\n      i0.ɵɵtext(18, \"LoadPortfolio()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-nav-list\")(20, \"a\", 7)(21, \"mat-icon\");\n      i0.ɵɵtext(22, \"folder_open\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \" \\u00A0 projects \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 8)(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"priority_high\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \" \\u00A0 ... \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"mat-toolbar\", 9);\n      i0.ɵɵtext(29, \"HaveFun()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-nav-list\")(31, \"a\", 10)(32, \"mat-icon\");\n      i0.ɵɵtext(33, \"casino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" \\u00A0 Mini-Games \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"mat-sidenav-content\", 11)(36, \"mat-toolbar\");\n      i0.ɵɵtemplate(37, SideNavComponent_button_37_Template, 3, 0, \"button\", 12);\n      i0.ɵɵpipe(38, \"async\");\n      i0.ɵɵelementStart(39, \"span\", 13);\n      i0.ɵɵtext(40, \"/* \\u00A0 TODO: click left to discover more \\u00A0 */\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(41, \"app-main-router\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(36);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(38, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLinkWithHref, i4.MatToolbar, i5.MatButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i9.MatRipple, i10.MainRouterComponent, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: inherit;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 170px;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%], mat-sidenav[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  background: #2a2a2a;\\n  transition: 1.7s all ease-in-out;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited {\\n    color: #9c9c9c;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    border: solid #ffffff;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    color: #000000;\\n    background-color: #757575dd;\\n    font-weight: bolder;\\n  }\\n\\n.side-nav-header[_ngcontent-%COMP%], #under-header[_ngcontent-%COMP%] {\\n  color: #56ee10;\\n}\\n\\n#about-me[_ngcontent-%COMP%] {\\n  color: #f20fdf;\\n}\\n\\n#load-portfolio[_ngcontent-%COMP%] {\\n  color: #0ff2eb;\\n}\\n\\n#activate-fun[_ngcontent-%COMP%] {\\n  color: #ea761f;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFRTtJQUNFLGNBQWM7RUFDaEI7O0FBRUE7SUFDRSxxQkFBcUI7RUFDdkI7O0FBRUE7SUFDRSxjQUFjO0lBQ2QsMkJBQTJCO0lBQzNCLG1CQUFtQjtFQUNyQjs7QUFFRjtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic2lkZS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDE3MHB4O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG5cbm1hdC10b29sYmFyLCBtYXQtc2lkZW5hdiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xuICB0cmFuc2l0aW9uOiAxLjdzIGFsbCBlYXNlLWluLW91dDtcbn1cblxubWF0LW5hdi1saXN0IGEge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuICBtYXQtbmF2LWxpc3QgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzljOWM5YztcbiAgfVxuXG4gIG1hdC1uYXYtbGlzdCBhOmZvY3VzIHtcbiAgICBib3JkZXI6IHNvbGlkICNmZmZmZmY7XG4gIH1cblxuICBtYXQtbmF2LWxpc3QgYTpob3ZlciB7XG4gICAgY29sb3I6ICMwMDAwMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc1NzU3NWRkO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIH1cblxuLnNpZGUtbmF2LWhlYWRlciwgI3VuZGVyLWhlYWRlciB7XG4gIGNvbG9yOiAjNTZlZTEwO1xufVxuXG4jYWJvdXQtbWUge1xuICBjb2xvcjogI2YyMGZkZjtcbn1cblxuI2xvYWQtcG9ydGZvbGlvIHtcbiAgY29sb3I6ICMwZmYyZWI7XG59XG5cbiNhY3RpdmF0ZS1mdW4ge1xuICBjb2xvcjogI2VhNzYxZjtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6BA,WAA7B,QAAgD,qBAAhD;AAEA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;;;;;;;;;;;;;;;ICkDMC;IAGQA;MAAAA;MAAAA;;MAAA;;MAAA,OAASA,4BAAT;IAAwB,CAAxB;IAGNA;IAA4CA;IAAIA;;;;ADjDxD,OAAM,MAAOC,gBAAP,CAAuB;EAQzBC,YAAoBC,kBAApB,EAA0D;IAAtC,6CAAsC,CAP1D;;IACA,kBAAkC,KAAKA,kBAAL,CAC7BC,OAD6B,CACrBP,WAAW,CAACQ,OADS,EAE7BC,IAF6B,CAG1BR,GAAG,CAAES,MAAD,IAAYA,MAAM,CAACC,OAApB,CAHuB,EAI1BT,WAAW,EAJe,CAAlC,CAM0D,CAC1D;;IAEO,sBAAiB,WAAjB;EAHuD;;AARrC;;;mBAAhBE,kBAAgBD;AAAA;;;QAAhBC;EAAgBQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7Bb,iDAAiD,CAAjD,EAAiD,aAAjD,EAAiD,CAAjD,EAAiD,CAAjD;;;;MAOIA;MAA2BA;MAASA;MACpCA,qCAAc,CAAd,EAAc,GAAd,EAAc,CAAd,EAAc,EAAd,EAAc,UAAd;MAIYA;MAAIA;MACdA;MACAA;MACAA,8BAEkC,EAFlC,EAEkC,UAFlC;MAGUA;MAAMA;MAChBA;MACAA;MAGFA;MAAiCA;MAAeA;MAChDA,sCAAc,EAAd,EAAc,GAAd,EAAc,CAAd,EAAc,EAAd,EAAc,UAAd;MAIYA;MAAWA;MACnBA;MACFA;MACAA,8BAEkB,EAFlB,EAEkB,UAFlB;MAGUA;MAAaA;MACvBA;MACAA;MAGFA;MAA+BA;MAASA;MACxCA,sCAAc,EAAd,EAAc,GAAd,EAAc,EAAd,EAAc,EAAd,EAAc,UAAd;MAIYA;MAAMA;MAChBA;MACAA;MAIJA,iDAA6C,EAA7C,EAA6C,aAA7C;MAGIA;;MASAA;MAAwBA;MAAqDA;MAIhFA;MACDA;;;;MAhEaA;MAAAA,8EAA+C,QAA/C,EAA+CA,8CAA/C;MADAA;MAuDAA;MAAAA","names":["Breakpoints","map","shareReplay","i0","SideNavComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\n\r\n@Component({\r\n    selector: \"app-side-nav\",\r\n    templateUrl: \"./side-nav.component.html\",\r\n    styleUrls: [\"./side-nav.component.css\"],\r\n})\r\nexport class SideNavComponent {\r\n    // auto-generated\r\n    isHandset$: Observable<boolean> = this.breakpointObserver\r\n        .observe(Breakpoints.Handset)\r\n        .pipe(\r\n            map((result) => result.matches),\r\n            shareReplay()\r\n        );\r\n    constructor(private breakpointObserver: BreakpointObserver) {}\r\n    // auto-generated\r\n\r\n    public matRippleColor = \"#d9d9d9af\";\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n               [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\"\n               >\n\n    <mat-toolbar id=\"about-me\">AboutMe()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item\n         matRipple matRippleColor=this.matRippleColor\n         routerLink=\"about-me/intro\">\n      <mat-icon>face</mat-icon>\n      &nbsp; introduction\n      </a>\n      <a mat-list-item\n         matRipple matRippleColor=this.matRippleColor\n         routerLink=\"about-me/knowlege\">\n      <mat-icon>memory</mat-icon>\n      &nbsp; knowlege\n      </a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"load-portfolio\">LoadPortfolio()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item\n         matRipple matRippleColor=this.matRippleColor\n         routerLink=\"load-portfolio/projects\">\n      <mat-icon>folder_open</mat-icon>\n        &nbsp; projects\n      </a>\n      <a mat-list-item\n         matRipple matRippleColor=this.matRippleColor\n         routerLink=\"#\">\n      <mat-icon>priority_high</mat-icon>\n      &nbsp; ...\n      </a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"activate-fun\">HaveFun()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item\n         matRipple matRippleColor=this.matRippleColor\n         routerLink=\"have-fun/games\">\n      <mat-icon>casino</mat-icon>\n      &nbsp; Mini-Games\n      </a>\n    </mat-nav-list>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"side-nav-header\">\n    <mat-toolbar>\n\n      <button type=\"button\"\n              aria-label=\"Toggle sidenav\"\n              mat-icon-button\n              (click)=\"drawer.toggle()\"\n              *ngIf=\"isHandset$ | async\"\n              class=\"side-nav-header\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n\n      <span id=\"under-header\">/* &nbsp; TODO: click left to discover more &nbsp; */</span>\n    </mat-toolbar>\n    \n    <!-- ROUTER -->\n   <app-main-router></app-main-router>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n"]},"metadata":{},"sourceType":"module"}