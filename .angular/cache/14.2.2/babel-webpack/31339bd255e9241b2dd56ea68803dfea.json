{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Tahaa/Desktop/ProgrammData/GIT_REPOS/t-al-d-WebPortfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from \"@angular/core\";\nimport { Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Particle } from \"./Particles\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\nconst _c0 = [\"canvasRef\"];\n\nfunction SideNavComponent_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SideNavComponent_button_39_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 17);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SideNavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver; // auto-generated\n\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    this.particlesArray = [];\n  } // after the view has been loaded\n\n\n  ngAfterViewInit() {\n    const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\n\n    if (tempCanvasContext !== null) {\n      this.canvasContext = tempCanvasContext;\n    }\n  } // fill the array with new Particles\n\n\n  fillParticleArray(xPos, yPos) {\n    for (let i = 0; i < 8; i++) {\n      const particle = new Particle(xPos, yPos, Math.random() * 14 + 1, Math.random() * 3 - 1.5, Math.random() * 3 - 1.5, 0.1);\n      this.particlesArray.push(particle);\n    }\n  } // delete Particles wich habe become to small\n\n\n  emptyParticleArray() {\n    for (let i = 0; i < this.particlesArray.length; i++) {\n      const particle = this.particlesArray[i];\n\n      if (particle.size < 0.7) {\n        this.particlesArray.splice(i, 1);\n      }\n    }\n  } //draw the rectangle on the canvas\n\n\n  drawRectOnCanvas() {\n    this.particlesArray.forEach(particle => {\n      particle.update();\n      particle.draw(this.canvasContext);\n    });\n  } // clear the canvas to draw something new\n\n\n  clearCanvas() {\n    this.canvasContext.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n  } //run async while until array is empty\n\n\n  clearParticles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (_this.particlesArray.length !== 0) {\n        _this.clearCanvas();\n\n        _this.drawRectOnCanvas();\n\n        _this.emptyParticleArray();\n\n        yield new Promise(f => setTimeout(f, 6));\n        console.log(_this.particlesArray.length); // just for safety\n\n        if (_this.particlesArray.length === 0) {\n          break;\n        }\n      }\n    })();\n  } // empty particleArray when keys are pressed\n\n\n  onKeyDown() {\n    this.clearParticles();\n  } // empty particleArray when scrollingd\n\n\n  onWindowScroll() {\n    this.clearParticles();\n  } // every once and while empty the particleArray\n\n\n  onMouseLeaveAndDown() {\n    this.clearParticles();\n  } // look out for mousemovements\n\n\n  onMouseMove(event) {\n    if (this.canvasRef !== null) {\n      // make canvas fit better\n      this.canvasRef.nativeElement.width = window.innerWidth;\n      this.canvasRef.nativeElement.height = window.innerHeight;\n    }\n\n    if (this.canvasContext !== null) {\n      // important clear first, then draw\n      this.clearCanvas();\n      this.fillParticleArray(event.x - 180, event.y - 160);\n      this.drawRectOnCanvas();\n      this.emptyParticleArray();\n    }\n  }\n\n}\n\nSideNavComponent.ɵfac = function SideNavComponent_Factory(t) {\n  return new (t || SideNavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nSideNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SideNavComponent,\n  selectors: [[\"app-side-nav\"]],\n  viewQuery: function SideNavComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n    }\n  },\n  hostBindings: function SideNavComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function SideNavComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"window.scrollY\", function SideNavComponent_window_scrollY_HostBindingHandler($event) {\n        return ctx.onWindowScroll($event);\n      })(\"mouseleave\", function SideNavComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.onMouseLeaveAndDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousedown\", function SideNavComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseLeaveAndDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousemove\", function SideNavComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMove($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 47,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"id\", \"about-me\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/intro\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/knowlege\"], [\"id\", \"load-portfolio\"], [\"mat-list-item\", \"\", \"routerLink\", \"load-portfolio/projects\"], [\"mat-list-item\", \"\", \"routerLink\", \"#\"], [\"id\", \"activate-fun\"], [\"mat-list-item\", \"\", \"routerLink\", \"have-fun/move-io\"], [\"mat-button\", \"\", \"id\", \"toggle-mouse-effects\"], [1, \"side-nav-header\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", \"class\", \"side-nav-header\", 3, \"click\", 4, \"ngIf\"], [1, \"router\"], [\"canvasRef\", \"\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 1, \"side-nav-header\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function SideNavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\", 3);\n      i0.ɵɵtext(7, \"AboutMe()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 4)(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"face\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" \\u00A0 introduction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 5)(14, \"mat-icon\");\n      i0.ɵɵtext(15, \"memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\u00A0 knowlege\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"mat-toolbar\", 6);\n      i0.ɵɵtext(18, \"LoadPortfolio()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-nav-list\")(20, \"a\", 7)(21, \"mat-icon\");\n      i0.ɵɵtext(22, \"folder_open\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\u00A0 projects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 8)(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"priority_high\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\u00A0 ...\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"mat-toolbar\", 9);\n      i0.ɵɵtext(29, \"HaveFun()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-nav-list\")(31, \"a\", 10)(32, \"mat-icon\");\n      i0.ɵɵtext(33, \"casino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\u00A0 Move.IO\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"button\", 11);\n      i0.ɵɵtext(36, \"toggle-mouse-effects\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"mat-sidenav-content\", 12)(38, \"mat-toolbar\");\n      i0.ɵɵtemplate(39, SideNavComponent_button_39_Template, 3, 0, \"button\", 13);\n      i0.ɵɵpipe(40, \"async\");\n      i0.ɵɵelementStart(41, \"span\", 12);\n      i0.ɵɵtext(42, \"/* \\u00A0 TODO: click left to discover more \\u00A0 */\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 14);\n      i0.ɵɵelement(44, \"canvas\", null, 15)(46, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(38);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(40, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i4.MatToolbar, i5.MatButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: inherit;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 170px;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%], mat-sidenav[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  background: #2a2a2a;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited {\\n    color: #9c9c9c;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    border: solid #ffffff;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    color: #000000;\\n    background-color: #757575dd;\\n    font-weight: bolder;\\n  }\\n\\n#toggle-mouse-effects[_ngcontent-%COMP%] {\\n    bottom: 0px;\\n    background-color: #ea761f;\\n}\\n\\n.router[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  margin-right: 4px;\\n}\\n\\n.router[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n    position: fixed;\\n    z-index: -1;\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n.side-nav-header[_ngcontent-%COMP%] {\\n  color: #56ee10;\\n}\\n\\n#about-me[_ngcontent-%COMP%] {\\n  color: #f20fdf;\\n}\\n\\n#load-portfolio[_ngcontent-%COMP%] {\\n  color: #0ff2eb;\\n}\\n\\n#activate-fun[_ngcontent-%COMP%] {\\n  color: #ea761f;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7QUFFQTtJQUNFLGNBQWM7SUFDZCwyQkFBMkI7SUFDM0IsbUJBQW1CO0VBQ3JCOztBQUVGO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtBQUM3Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBRUU7SUFDRSxlQUFlO0lBQ2YsV0FBVztJQUNYLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUdBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNpZGUtbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAxNzBweDtcbn1cblxuLm1hdC10b29sYmFyLm1hdC1wcmltYXJ5IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxO1xufVxuXG5tYXQtdG9vbGJhciwgbWF0LXNpZGVuYXYge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgYmFja2dyb3VuZDogIzJhMmEyYTtcbn1cblxubWF0LW5hdi1saXN0IGEge1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuICBtYXQtbmF2LWxpc3QgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzljOWM5YztcbiAgfVxuXG4gIG1hdC1uYXYtbGlzdCBhOmZvY3VzIHtcbiAgICBib3JkZXI6IHNvbGlkICNmZmZmZmY7XG4gIH1cblxuICBtYXQtbmF2LWxpc3QgYTpob3ZlciB7XG4gICAgY29sb3I6ICMwMDAwMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzc1NzU3NWRkO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gIH1cblxuI3RvZ2dsZS1tb3VzZS1lZmZlY3RzIHtcbiAgICBib3R0b206IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE3NjFmO1xufVxuXG4ucm91dGVyIHtcbiAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG5cbiAgLnJvdXRlciBjYW52YXMge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuLnNpZGUtbmF2LWhlYWRlciB7XG4gIGNvbG9yOiAjNTZlZTEwO1xufVxuXG5cbiNhYm91dC1tZSB7XG4gIGNvbG9yOiAjZjIwZmRmO1xufVxuXG4jbG9hZC1wb3J0Zm9saW8ge1xuICBjb2xvcjogIzBmZjJlYjtcbn1cblxuI2FjdGl2YXRlLWZ1biB7XG4gIGNvbG9yOiAjZWE3NjFmO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","Breakpoints","map","shareReplay","Particle","i0","SideNavComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","ngAfterViewInit","tempCanvasContext","canvasRef","nativeElement","getContext","canvasContext","fillParticleArray","xPos","yPos","i","particle","Math","random","particlesArray","push","emptyParticleArray","length","size","splice","drawRectOnCanvas","forEach","update","draw","clearCanvas","clearRect","width","height","clearParticles","Promise","f","setTimeout","console","log","onKeyDown","onWindowScroll","onMouseLeaveAndDown","onMouseMove","event","window","innerWidth","innerHeight","x","y","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.html"],"sourcesContent":["import {\r\n    Component,\r\n    ViewChild,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    HostListener,\r\n} from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\nimport { Particle } from \"./Particles\";\r\n\r\n@Component({\r\n    selector: \"app-side-nav\",\r\n    templateUrl: \"./side-nav.component.html\",\r\n    styleUrls: [\"./side-nav.component.css\"],\r\n})\r\nexport class SideNavComponent implements AfterViewInit {\r\n    // auto-generated\r\n    isHandset$: Observable<boolean> = this.breakpointObserver\r\n        .observe(Breakpoints.Handset)\r\n        .pipe(\r\n            map((result) => result.matches),\r\n            shareReplay()\r\n        );\r\n    constructor(private breakpointObserver: BreakpointObserver) {}\r\n    // auto-generated\r\n\r\n    // Access to a certain element in the DOM\r\n    @ViewChild(\"canvasRef\")\r\n    canvasRef!: ElementRef<HTMLCanvasElement>;\r\n    private canvasContext!: CanvasRenderingContext2D;\r\n    private particlesArray: Array<Particle> = [];\r\n\r\n    // after the view has been loaded\r\n    ngAfterViewInit(): void {\r\n        const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\r\n\r\n        if (tempCanvasContext !== null) {\r\n            this.canvasContext = tempCanvasContext;\r\n        }\r\n    }\r\n\r\n    // fill the array with new Particles\r\n    fillParticleArray(xPos: number, yPos: number) {\r\n        for (let i = 0; i < 8; i++) {\r\n            const particle = new Particle(\r\n                xPos,\r\n                yPos,\r\n                Math.random() * 14 + 1,\r\n                Math.random() * 3 - 1.5,\r\n                Math.random() * 3 - 1.5,\r\n                0.1\r\n            );\r\n            this.particlesArray.push(particle);\r\n        }\r\n    }\r\n\r\n    // delete Particles wich habe become to small\r\n    emptyParticleArray() {\r\n        for (let i = 0; i < this.particlesArray.length; i++) {\r\n            const particle = this.particlesArray[i];\r\n            if (particle.size < 0.7) {\r\n                this.particlesArray.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    //draw the rectangle on the canvas\r\n    drawRectOnCanvas() {\r\n        this.particlesArray.forEach((particle) => {\r\n            particle.update();\r\n            particle.draw(this.canvasContext);\r\n        });\r\n    }\r\n\r\n    // clear the canvas to draw something new\r\n    clearCanvas() {\r\n        this.canvasContext.clearRect(\r\n            0,\r\n            0,\r\n            this.canvasRef.nativeElement.width,\r\n            this.canvasRef.nativeElement.height\r\n        );\r\n    }\r\n\r\n    //run async while until array is empty\r\n    async clearParticles() {\r\n        while (this.particlesArray.length !== 0) {\r\n            this.clearCanvas();\r\n            this.drawRectOnCanvas();\r\n            this.emptyParticleArray();\r\n            await new Promise((f) => setTimeout(f, 6));\r\n            console.log(this.particlesArray.length);\r\n            // just for safety\r\n            if (this.particlesArray.length === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // empty particleArray when keys are pressed\r\n    @HostListener(\"document:keydown\", [\"$event\"])\r\n    onKeyDown() {\r\n        this.clearParticles();\r\n    }\r\n\r\n    // empty particleArray when scrollingd\r\n    @HostListener(\"window.scrollY\", [\"$event\"])\r\n    onWindowScroll() {\r\n        this.clearParticles();\r\n    }\r\n\r\n    // every once and while empty the particleArray\r\n    @HostListener(\"document:mouseleave\", [\"$event\"])\r\n    @HostListener(\"document:mousedown\", [\"$event\"])\r\n    onMouseLeaveAndDown() {\r\n        this.clearParticles();\r\n    }\r\n\r\n    // look out for mousemovements\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.canvasRef !== null) {\r\n            // make canvas fit better\r\n            this.canvasRef.nativeElement.width = window.innerWidth;\r\n            this.canvasRef.nativeElement.height = window.innerHeight;\r\n        }\r\n        if (this.canvasContext !== null) {\r\n            // important clear first, then draw\r\n            this.clearCanvas();\r\n            this.fillParticleArray(event.x - 180, event.y - 160);\r\n            this.drawRectOnCanvas();\r\n            this.emptyParticleArray();\r\n        }\r\n    }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n               [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\">\n\n    <mat-toolbar id=\"about-me\">AboutMe()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"about-me/intro\"><mat-icon>face</mat-icon> &nbsp; introduction</a>\n      <a mat-list-item routerLink=\"about-me/knowlege\"><mat-icon>memory</mat-icon>&nbsp; knowlege</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"load-portfolio\">LoadPortfolio()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"load-portfolio/projects\"><mat-icon>folder_open</mat-icon>&nbsp; projects</a>\n      <a mat-list-item routerLink=\"#\"><mat-icon>priority_high</mat-icon>&nbsp; ...</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"activate-fun\">HaveFun()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"have-fun/move-io\"><mat-icon>casino</mat-icon>&nbsp; Move.IO</a>\n    </mat-nav-list>\n\n    <button mat-button id=\"toggle-mouse-effects\">toggle-mouse-effects</button>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"side-nav-header\">\n    <mat-toolbar>\n\n      <button type=\"button\"\n              aria-label=\"Toggle sidenav\"\n              mat-icon-button\n              (click)=\"drawer.toggle()\"\n              *ngIf=\"isHandset$ | async\"\n              class=\"side-nav-header\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"side-nav-header\">/* &nbsp; TODO: click left to discover more &nbsp; */</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- ROUTER -->\n    <div class=\"router\">\n      <canvas #canvasRef></canvas>\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n"]},"metadata":{},"sourceType":"module"}