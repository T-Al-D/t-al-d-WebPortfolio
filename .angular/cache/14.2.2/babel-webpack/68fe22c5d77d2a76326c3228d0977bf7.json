{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport { Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Particle } from \"./Particles\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\nconst _c0 = [\"canvasRef\"];\n\nfunction SideNavComponent_button_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function SideNavComponent_button_37_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 16);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SideNavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver; // auto-generated\n\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    this.particlesArray = [];\n  } // after the view has been loaded\n\n\n  ngAfterViewInit() {\n    const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\n\n    if (tempCanvasContext !== null) {\n      this.canvasContext = tempCanvasContext;\n    }\n  } // fill the array with new Particles\n\n\n  initParticleArray() {\n    for (let i = 0; i < 10; i++) {\n      const particle = new Particle(10, 10, Math.random() * 5 + 1, Math.random() * 3 - 1.5, Math.random() * 3 - 1.5);\n      this.particlesArray.push(particle);\n    }\n  } // empty Arry to start over\n\n\n  emptyParticleArray() {\n    this.particlesArray.splice(0);\n  } //draw the rectangle on the canvas\n\n\n  drawRectOnCanvas(xPos, yPos) {\n    const rgba = \"rgba(255, 255, 255, 1.0)\";\n    this.canvasContext.strokeStyle = rgba;\n    this.canvasContext.strokeRect(xPos, yPos, 10, 10);\n    this.particlesArray.forEach(particle => {\n      particle.update();\n      particle.draw(this.canvasContext);\n    });\n  } // clear the canvas to draw something new\n\n\n  clearCanvas() {\n    this.canvasContext.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n  } // Look out for specific events\n\n\n  onMouseMove(event) {\n    if (this.canvasContext !== null) {\n      // important clar first, then draw\n      this.clearCanvas();\n      this.initParticleArray();\n      this.drawRectOnCanvas(event.x, event.y); //this.emptyParticleArray();\n    }\n  }\n\n}\n\nSideNavComponent.ɵfac = function SideNavComponent_Factory(t) {\n  return new (t || SideNavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nSideNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SideNavComponent,\n  selectors: [[\"app-side-nav\"]],\n  viewQuery: function SideNavComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n    }\n  },\n  hostBindings: function SideNavComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function SideNavComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMove($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 45,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"id\", \"about-me\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/intro\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/knowlege\"], [\"id\", \"load-portfolio\"], [\"mat-list-item\", \"\", \"routerLink\", \"load-portfolio/projects\"], [\"mat-list-item\", \"\", \"routerLink\", \"#\"], [\"id\", \"activate-fun\"], [\"mat-list-item\", \"\", \"routerLink\", \"have-fun/move-io\"], [1, \"side-nav-header\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", \"class\", \"side-nav-header\", 3, \"click\", 4, \"ngIf\"], [1, \"router\"], [\"canvasRef\", \"\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 1, \"side-nav-header\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function SideNavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\", 3);\n      i0.ɵɵtext(7, \"AboutMe()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 4)(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"face\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" \\u00A0 introduction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 5)(14, \"mat-icon\");\n      i0.ɵɵtext(15, \"memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\u00A0 knowlege\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"mat-toolbar\", 6);\n      i0.ɵɵtext(18, \"LoadPortfolio()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-nav-list\")(20, \"a\", 7)(21, \"mat-icon\");\n      i0.ɵɵtext(22, \"folder_open\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\u00A0 projects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 8)(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"priority_high\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\u00A0 ...\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"mat-toolbar\", 9);\n      i0.ɵɵtext(29, \"HaveFun()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-nav-list\")(31, \"a\", 10)(32, \"mat-icon\");\n      i0.ɵɵtext(33, \"casino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\u00A0 Move.IO\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(35, \"mat-sidenav-content\", 11)(36, \"mat-toolbar\");\n      i0.ɵɵtemplate(37, SideNavComponent_button_37_Template, 3, 0, \"button\", 12);\n      i0.ɵɵpipe(38, \"async\");\n      i0.ɵɵelementStart(39, \"span\", 11);\n      i0.ɵɵtext(40, \"/* \\u00A0 TODO: click left to discover more \\u00A0 */\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 13);\n      i0.ɵɵelement(42, \"canvas\", null, 14)(44, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(36);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(38, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i4.MatToolbar, i5.MatButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: inherit;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 170px;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%], mat-sidenav[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  background: #2a2a2a;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited {\\n    color: #9c9c9c;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    border: solid #ffffff;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    color: #000000;\\n    background-color: #757575dd;\\n    font-weight: bolder;\\n  }\\n\\n.router[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  margin-right: 4px;\\n}\\n\\n.router[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n    \\n  }\\n\\n.side-nav-header[_ngcontent-%COMP%] {\\n  color: #56ee10;\\n}\\n\\n#about-me[_ngcontent-%COMP%] {\\n  color: #f20fdf;\\n}\\n\\n#load-portfolio[_ngcontent-%COMP%] {\\n  color: #0ff2eb;\\n}\\n\\n#activate-fun[_ngcontent-%COMP%] {\\n  color: #ea761f;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7QUFFQTtJQUNFLGNBQWM7SUFDZCwyQkFBMkI7SUFDM0IsbUJBQW1CO0VBQ3JCOztBQUdGO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFRTtJQUNFLGdCQUFnQjtFQUNsQjs7QUFFRjtFQUNFLGNBQWM7QUFDaEI7O0FBR0E7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic2lkZS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDE3MHB4O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG5cbm1hdC10b29sYmFyLCBtYXQtc2lkZW5hdiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xufVxuXG5tYXQtbmF2LWxpc3QgYSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4gIG1hdC1uYXYtbGlzdCBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjOWM5YzljO1xuICB9XG5cbiAgbWF0LW5hdi1saXN0IGE6Zm9jdXMge1xuICAgIGJvcmRlcjogc29saWQgI2ZmZmZmZjtcbiAgfVxuXG4gIG1hdC1uYXYtbGlzdCBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzU3NTc1ZGQ7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgfVxuXG5cbi5yb3V0ZXIge1xuICBtYXJnaW4tbGVmdDogNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDRweDtcbn1cblxuICAucm91dGVyIGNhbnZhcyB7XG4gICAgLypkaXNwbGF5Om5vbmU7Ki9cbiAgfVxuXG4uc2lkZS1uYXYtaGVhZGVyIHtcbiAgY29sb3I6ICM1NmVlMTA7XG59XG5cblxuI2Fib3V0LW1lIHtcbiAgY29sb3I6ICNmMjBmZGY7XG59XG5cbiNsb2FkLXBvcnRmb2xpbyB7XG4gIGNvbG9yOiAjMGZmMmViO1xufVxuXG4jYWN0aXZhdGUtZnVuIHtcbiAgY29sb3I6ICNlYTc2MWY7XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","Breakpoints","map","shareReplay","Particle","i0","SideNavComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","ngAfterViewInit","tempCanvasContext","canvasRef","nativeElement","getContext","canvasContext","initParticleArray","i","particle","Math","random","particlesArray","push","emptyParticleArray","splice","drawRectOnCanvas","xPos","yPos","rgba","strokeStyle","strokeRect","forEach","update","draw","clearCanvas","clearRect","width","height","onMouseMove","event","x","y","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.html"],"sourcesContent":["import {\r\n    Component,\r\n    ViewChild,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    HostListener,\r\n} from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\nimport { Particle } from \"./Particles\";\r\n\r\n@Component({\r\n    selector: \"app-side-nav\",\r\n    templateUrl: \"./side-nav.component.html\",\r\n    styleUrls: [\"./side-nav.component.css\"],\r\n})\r\nexport class SideNavComponent implements AfterViewInit {\r\n    // auto-generated\r\n    isHandset$: Observable<boolean> = this.breakpointObserver\r\n        .observe(Breakpoints.Handset)\r\n        .pipe(\r\n            map((result) => result.matches),\r\n            shareReplay()\r\n        );\r\n    constructor(private breakpointObserver: BreakpointObserver) {}\r\n    // auto-generated\r\n\r\n    // Access to a certain element in the DOM\r\n    @ViewChild(\"canvasRef\")\r\n    canvasRef!: ElementRef<HTMLCanvasElement>;\r\n    private canvasContext!: CanvasRenderingContext2D;\r\n    private particlesArray: Array<Particle> = [];\r\n\r\n    // after the view has been loaded\r\n    ngAfterViewInit(): void {\r\n        const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\r\n\r\n        if (tempCanvasContext !== null) {\r\n            this.canvasContext = tempCanvasContext;\r\n        }\r\n    }\r\n\r\n    // fill the array with new Particles\r\n    initParticleArray() {\r\n        for (let i = 0; i < 10; i++) {\r\n            const particle = new Particle(\r\n                10,\r\n                10,\r\n                Math.random() * 5 + 1,\r\n                Math.random() * 3 - 1.5,\r\n                Math.random() * 3 - 1.5\r\n            );\r\n            this.particlesArray.push(particle);\r\n        }\r\n    }\r\n\r\n    // empty Arry to start over\r\n    emptyParticleArray() {\r\n        this.particlesArray.splice(0);\r\n    }\r\n\r\n    //draw the rectangle on the canvas\r\n    drawRectOnCanvas(xPos: number, yPos: number) {\r\n        const rgba = \"rgba(255, 255, 255, 1.0)\";\r\n        this.canvasContext.strokeStyle = rgba;\r\n        this.canvasContext.strokeRect(xPos, yPos, 10, 10);\r\n        this.particlesArray.forEach((particle) => {\r\n            particle.update();\r\n            particle.draw(this.canvasContext);\r\n        });\r\n    }\r\n\r\n    // clear the canvas to draw something new\r\n    clearCanvas() {\r\n        this.canvasContext.clearRect(\r\n            0,\r\n            0,\r\n            this.canvasRef.nativeElement.width,\r\n            this.canvasRef.nativeElement.height\r\n        );\r\n    }\r\n\r\n    // Look out for specific events\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.canvasContext !== null) {\r\n            // important clar first, then draw\r\n            this.clearCanvas();\r\n            this.initParticleArray();\r\n            this.drawRectOnCanvas(event.x, event.y);\r\n\r\n            //this.emptyParticleArray();\r\n        }\r\n    }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n               [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\">\n\n    <mat-toolbar id=\"about-me\">AboutMe()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"about-me/intro\"><mat-icon>face</mat-icon> &nbsp; introduction</a>\n      <a mat-list-item routerLink=\"about-me/knowlege\"><mat-icon>memory</mat-icon>&nbsp; knowlege</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"load-portfolio\">LoadPortfolio()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"load-portfolio/projects\"><mat-icon>folder_open</mat-icon>&nbsp; projects</a>\n      <a mat-list-item routerLink=\"#\"><mat-icon>priority_high</mat-icon>&nbsp; ...</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"activate-fun\">HaveFun()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"have-fun/move-io\"><mat-icon>casino</mat-icon>&nbsp; Move.IO</a>\n    </mat-nav-list>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"side-nav-header\">\n    <mat-toolbar>\n\n      <button type=\"button\"\n              aria-label=\"Toggle sidenav\"\n              mat-icon-button\n              (click)=\"drawer.toggle()\"\n              *ngIf=\"isHandset$ | async\"\n              class=\"side-nav-header\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"side-nav-header\">/* &nbsp; TODO: click left to discover more &nbsp; */</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- ROUTER -->\n    <div class=\"router\">\n      <canvas #canvasRef></canvas>\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"]},"metadata":{},"sourceType":"module"}