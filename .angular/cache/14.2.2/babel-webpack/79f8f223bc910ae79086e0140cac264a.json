{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\n\nfunction SideNavComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function SideNavComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SideNavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n\n}\n\nSideNavComponent.ɵfac = function SideNavComponent_Factory(t) {\n  return new (t || SideNavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nSideNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SideNavComponent,\n  selectors: [[\"app-side-nav\"]],\n  decls: 20,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/intro\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/knowlege\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function SideNavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\");\n      i0.ɵɵtext(7, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 3);\n      i0.ɵɵtext(10, \"introduction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 4);\n      i0.ɵɵtext(12, \"knowlege\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"mat-sidenav-content\")(14, \"mat-toolbar\");\n      i0.ɵɵtemplate(15, SideNavComponent_button_15_Template, 3, 0, \"button\", 5);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵelementStart(17, \"span\");\n      i0.ɵɵtext(18, \"T-Al-D-WebPortfolio\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(16, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i4.MatToolbar, i5.MatButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: inherit;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 170px;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%], mat-sidenav[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  background: #2a2a2a;\\n  animation: background-animation 10s infinite alternate;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  font: bolder;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited {\\n    color: #9c9c9c;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{\\n    background-color:#aa2626;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsc0RBQXNEO0FBQ3hEOztBQUdBO0VBQ0UsY0FBYztFQUNkLFlBQVk7QUFDZDs7QUFFRTtJQUNFLGNBQWM7RUFDaEI7O0FBRUE7SUFDRSx3QkFBd0I7RUFDMUIiLCJmaWxlIjoic2lkZS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDE3MHB4O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG5cbm1hdC10b29sYmFyLCBtYXQtc2lkZW5hdiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xuICBhbmltYXRpb246IGJhY2tncm91bmQtYW5pbWF0aW9uIDEwcyBpbmZpbml0ZSBhbHRlcm5hdGU7XG59XG5cblxubWF0LW5hdi1saXN0IGEge1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgZm9udDogYm9sZGVyO1xufVxuXG4gIG1hdC1uYXYtbGlzdCBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjOWM5YzljO1xuICB9XG5cbiAgbWF0LW5hdi1saXN0IGE6aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjojYWEyNjI2O1xuICB9XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6BA,WAA7B,QAAgD,qBAAhD;AAEA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;;;;;;;;;;;;;ICUMC;IAGQA;MAAAA;MAAAA;;MAAA;;MAAA,OAASA,4BAAT;IAAwB,CAAxB;IAENA;IAA4CA;IAAIA;;;;ADRxD,OAAM,MAAOC,gBAAP,CAAuB;EAQ3BC,YAAoBC,kBAApB,EAA0D;IAAtC;IANpB,kBAAkC,KAAKA,kBAAL,CAAwBC,OAAxB,CAAgCP,WAAW,CAACQ,OAA5C,EAC/BC,IAD+B,CAE9BR,GAAG,CAACS,MAAM,IAAIA,MAAM,CAACC,OAAlB,CAF2B,EAG9BT,WAAW,EAHmB,CAAlC;EAM8D;;AARnC;;;mBAAhBE,kBAAgBD;AAAA;;;QAAhBC;EAAgBQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7Bb,iDAAiD,CAAjD,EAAiD,aAAjD,EAAiD,CAAjD,EAAiD,CAAjD;;;;MAKIA;MAAaA;MAAIA;MACjBA,qCAAc,CAAd,EAAc,GAAd,EAAc,CAAd;MAC+CA;MAAYA;MACzDA;MAAgDA;MAAQA;MAG5DA,6CAAqB,EAArB,EAAqB,aAArB;MAEIA;;MAOAA;MAAMA;MAAmBA;MAI3BA;MACFA;;;;MAtBIA;MAAAA,8EAA+C,QAA/C,EAA+CA,8CAA/C;MADAA;MAeSA;MAAAA","names":["Breakpoints","map","shareReplay","i0","SideNavComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.css']\n})\nexport class SideNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"about-me/intro\">introduction</a>\n      <a mat-list-item routerLink=\"about-me/knowlege\">knowlege</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar>\n      <button type=\"button\"\n              aria-label=\"Toggle sidenav\"\n              mat-icon-button\n              (click)=\"drawer.toggle()\"\n              *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>T-Al-D-WebPortfolio</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- ROUTER -->\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"]},"metadata":{},"sourceType":"module"}