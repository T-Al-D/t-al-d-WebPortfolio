{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Tahaa/Desktop/ProgrammData/GIT_REPOS/t-al-d-WebPortfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from \"@angular/core\";\nimport { Breakpoints } from \"@angular/cdk/layout\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport { Particle } from \"./Particles\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/sidenav\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/list\";\nconst _c0 = [\"canvasRef\"];\n\nfunction SideNavComponent_button_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function SideNavComponent_button_39_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 18);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class SideNavComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver; // auto-generated\n\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    this._particlesArray = [];\n    this.allowMouseEffect = true;\n  } // after the view has been loaded or else exception gets thrown\n\n\n  ngAfterViewInit() {\n    const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\"); // assin to extra variable for easier access\n\n    if (tempCanvasContext !== null) {\n      this._canvasContext = tempCanvasContext;\n    }\n  } // fill the array with new Particles\n\n\n  fillParticleArray(xPos, yPos) {\n    for (let i = 0; i < 7; i++) {\n      const particle = new Particle(xPos, yPos, Math.random() * 14 + 1, Math.random() * 3 - 1.5, Math.random() * 3 - 1.5, 0.1);\n\n      this._particlesArray.push(particle);\n    }\n  } // delete Particles wich habe become to small\n\n\n  emptyParticleArray() {\n    for (let i = 0; i < this._particlesArray.length; i++) {\n      const particle = this._particlesArray[i];\n\n      if (particle.size < 2) {\n        this._particlesArray.splice(i, 1);\n      }\n    }\n  } //draw the rectangle on the canvas\n\n\n  drawRectOnCanvas() {\n    this._particlesArray.forEach(particle => {\n      particle.update();\n      particle.draw(this._canvasContext);\n    });\n  } // clear the canvas to draw something new\n\n\n  clearCanvas() {\n    this._canvasContext.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n  } //run async while until array is empty\n\n\n  clearParticles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (_this._particlesArray.length !== 0) {\n        _this.clearCanvas();\n\n        _this.drawRectOnCanvas();\n\n        _this.emptyParticleArray();\n\n        yield new Promise(f => setTimeout(f, 6)); // just for safety\n\n        if (_this._particlesArray.length === 0) {\n          break;\n        }\n      }\n    })();\n  } // user can decide if mouse effects are wished\n\n\n  toggleMouseEffect() {\n    this.allowMouseEffect = !this.allowMouseEffect;\n    this.clearParticles();\n  } // every once and while empty the particleArray\n\n\n  dissolveMouseEffects() {\n    this.clearParticles();\n  } // look out for mousemovements\n\n\n  onMouseMove(event) {\n    if (this.allowMouseEffect) {\n      if (this.canvasRef !== null) {\n        // make canvas fit better\n        this.canvasRef.nativeElement.width = window.innerWidth;\n        this.canvasRef.nativeElement.height = window.innerHeight;\n      }\n\n      if (this._canvasContext !== null) {\n        // important clear first, then draw\n        const correctionX = 165;\n        const correctionY = 120;\n        this.clearCanvas();\n        this.fillParticleArray(event.x - correctionX, event.y - correctionY);\n        this.drawRectOnCanvas();\n        this.emptyParticleArray();\n      }\n    }\n  }\n\n}\n\nSideNavComponent.ɵfac = function SideNavComponent_Factory(t) {\n  return new (t || SideNavComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nSideNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SideNavComponent,\n  selectors: [[\"app-side-nav\"]],\n  viewQuery: function SideNavComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n    }\n  },\n  hostBindings: function SideNavComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function SideNavComponent_scroll_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveWindow)(\"keydown\", function SideNavComponent_keydown_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseleave\", function SideNavComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousedown\", function SideNavComponent_mousedown_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousemove\", function SideNavComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMove($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 47,\n  vars: 12,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"id\", \"about-me\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/intro\"], [\"mat-list-item\", \"\", \"routerLink\", \"about-me/knowlege\"], [\"id\", \"load-portfolio\"], [\"mat-list-item\", \"\", \"routerLink\", \"load-portfolio/projects\"], [\"mat-list-item\", \"\", \"routerLink\", \"#\"], [\"id\", \"activate-fun\"], [\"mat-list-item\", \"\", \"routerLink\", \"have-fun/move-io\"], [\"mat-button\", \"\", \"id\", \"toggle-mouse-effect\", 3, \"click\"], [1, \"side-nav-header\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", \"class\", \"side-nav-header\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"under-header\"], [1, \"router\"], [\"canvasRef\", \"\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 1, \"side-nav-header\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function SideNavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"mat-toolbar\", 3);\n      i0.ɵɵtext(7, \"AboutMe()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 4)(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"face\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \" \\u00A0 introduction\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 5)(14, \"mat-icon\");\n      i0.ɵɵtext(15, \"memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \"\\u00A0 knowlege\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"mat-toolbar\", 6);\n      i0.ɵɵtext(18, \"LoadPortfolio()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"mat-nav-list\")(20, \"a\", 7)(21, \"mat-icon\");\n      i0.ɵɵtext(22, \"folder_open\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(23, \"\\u00A0 projects\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 8)(25, \"mat-icon\");\n      i0.ɵɵtext(26, \"priority_high\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(27, \"\\u00A0 ...\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"mat-toolbar\", 9);\n      i0.ɵɵtext(29, \"HaveFun()\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"mat-nav-list\")(31, \"a\", 10)(32, \"mat-icon\");\n      i0.ɵɵtext(33, \"casino\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\u00A0 Move.IO\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function SideNavComponent_Template_button_click_35_listener() {\n        return ctx.toggleMouseEffect();\n      });\n      i0.ɵɵtext(36, \" toggle-mouse-effect \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"mat-sidenav-content\", 12)(38, \"mat-toolbar\");\n      i0.ɵɵtemplate(39, SideNavComponent_button_39_Template, 3, 0, \"button\", 13);\n      i0.ɵɵpipe(40, \"async\");\n      i0.ɵɵelementStart(41, \"span\", 14);\n      i0.ɵɵtext(42, \"/* \\u00A0 TODO: click left to discover more \\u00A0 */\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 15);\n      i0.ɵɵelement(44, \"canvas\", null, 16)(46, \"router-outlet\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 6, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 8, ctx.isHandset$) === false);\n      i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 4, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      i0.ɵɵadvance(38);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(40, 10, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i3.RouterLinkWithHref, i4.MatToolbar, i5.MatButton, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent, i7.MatIcon, i8.MatNavList, i8.MatListItem, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background: inherit;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 170px;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\nmat-toolbar[_ngcontent-%COMP%], mat-sidenav[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n  background: #2a2a2a;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  color: #ffffff;\\n}\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited {\\n    color: #9c9c9c;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus {\\n    border: solid #ffffff;\\n  }\\n\\nmat-nav-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    color: #000000;\\n    background-color: #757575dd;\\n    font-weight: bolder;\\n  }\\n\\n.router[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  margin-right: 4px;\\n}\\n\\n.router[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n    position: fixed;\\n    z-index: -1;\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n.side-nav-header[_ngcontent-%COMP%], #under-header[_ngcontent-%COMP%] {\\n  color: #56ee10;\\n}\\n\\n#toggle-mouse-effect[_ngcontent-%COMP%] {\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  font-weight: bold;\\n  color: #000000;\\n  background: linear-gradient(-45deg, #fcfe2c, #56ee10, #af06d0);\\n  border: 3px solid #12a5a2;\\n}\\n\\n#toggle-mouse-effect[_ngcontent-%COMP%]:hover {\\n    box-shadow:inset 0 0 0 0.3rem #ffffff;\\n  }\\n\\n#about-me[_ngcontent-%COMP%] {\\n  color: #f20fdf;\\n}\\n\\n#load-portfolio[_ngcontent-%COMP%] {\\n  color: #0ff2eb;\\n}\\n\\n#activate-fun[_ngcontent-%COMP%] {\\n  color: #ea761f;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZGUtbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsTUFBTTtFQUNOLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVFO0lBQ0UsY0FBYztFQUNoQjs7QUFFQTtJQUNFLHFCQUFxQjtFQUN2Qjs7QUFFQTtJQUNFLGNBQWM7SUFDZCwyQkFBMkI7SUFDM0IsbUJBQW1CO0VBQ3JCOztBQUVGO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFRTtJQUNFLGVBQWU7SUFDZixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7RUFDZDs7QUFFRjtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsT0FBTztFQUNQLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsY0FBYztFQUNkLDhEQUE4RDtFQUM5RCx5QkFBeUI7QUFDM0I7O0FBRUU7SUFDRSxxQ0FBcUM7RUFDdkM7O0FBRUY7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic2lkZS1uYXYuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4uc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDE3MHB4O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG5cbm1hdC10b29sYmFyLCBtYXQtc2lkZW5hdiB7XG4gIGNvbG9yOiAjZmZmZmZmO1xuICBiYWNrZ3JvdW5kOiAjMmEyYTJhO1xufVxuXG5tYXQtbmF2LWxpc3QgYSB7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG4gIG1hdC1uYXYtbGlzdCBhOnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjOWM5YzljO1xuICB9XG5cbiAgbWF0LW5hdi1saXN0IGE6Zm9jdXMge1xuICAgIGJvcmRlcjogc29saWQgI2ZmZmZmZjtcbiAgfVxuXG4gIG1hdC1uYXYtbGlzdCBhOmhvdmVyIHtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzU3NTc1ZGQ7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgfVxuXG4ucm91dGVyIHtcbiAgbWFyZ2luLWxlZnQ6IDRweDtcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XG59XG5cbiAgLnJvdXRlciBjYW52YXMge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAtMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH1cblxuLnNpZGUtbmF2LWhlYWRlciwgI3VuZGVyLWhlYWRlciB7XG4gIGNvbG9yOiAjNTZlZTEwO1xufVxuXG4jdG9nZ2xlLW1vdXNlLWVmZmVjdCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICNmY2ZlMmMsICM1NmVlMTAsICNhZjA2ZDApO1xuICBib3JkZXI6IDNweCBzb2xpZCAjMTJhNWEyO1xufVxuXG4gICN0b2dnbGUtbW91c2UtZWZmZWN0OmhvdmVyIHtcbiAgICBib3gtc2hhZG93Omluc2V0IDAgMCAwIDAuM3JlbSAjZmZmZmZmO1xuICB9XG5cbiNhYm91dC1tZSB7XG4gIGNvbG9yOiAjZjIwZmRmO1xufVxuXG4jbG9hZC1wb3J0Zm9saW8ge1xuICBjb2xvcjogIzBmZjJlYjtcbn1cblxuI2FjdGl2YXRlLWZ1biB7XG4gIGNvbG9yOiAjZWE3NjFmO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","Breakpoints","map","shareReplay","Particle","i0","SideNavComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","ngAfterViewInit","tempCanvasContext","canvasRef","nativeElement","getContext","_canvasContext","fillParticleArray","xPos","yPos","i","particle","Math","random","_particlesArray","push","emptyParticleArray","length","size","splice","drawRectOnCanvas","forEach","update","draw","clearCanvas","clearRect","width","height","clearParticles","Promise","f","setTimeout","toggleMouseEffect","allowMouseEffect","dissolveMouseEffects","onMouseMove","event","window","innerWidth","innerHeight","correctionX","correctionY","x","y","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\side-nav\\side-nav.component.html"],"sourcesContent":["import {\r\n    Component,\r\n    ViewChild,\r\n    ElementRef,\r\n    AfterViewInit,\r\n    HostListener,\r\n} from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, shareReplay } from \"rxjs/operators\";\r\nimport { Particle } from \"./Particles\";\r\n\r\n@Component({\r\n    selector: \"app-side-nav\",\r\n    templateUrl: \"./side-nav.component.html\",\r\n    styleUrls: [\"./side-nav.component.css\"],\r\n})\r\nexport class SideNavComponent implements AfterViewInit {\r\n    // auto-generated\r\n    isHandset$: Observable<boolean> = this.breakpointObserver\r\n        .observe(Breakpoints.Handset)\r\n        .pipe(\r\n            map((result) => result.matches),\r\n            shareReplay()\r\n        );\r\n    constructor(private breakpointObserver: BreakpointObserver) {}\r\n    // auto-generated\r\n\r\n    // Access to a certain element in the DOM\r\n    @ViewChild(\"canvasRef\")\r\n    canvasRef!: ElementRef<HTMLCanvasElement>;\r\n\r\n    // variables needed\r\n    private _canvasContext!: CanvasRenderingContext2D;\r\n    private _particlesArray: Array<Particle> = [];\r\n    private allowMouseEffect = true;\r\n\r\n    // after the view has been loaded or else exception gets thrown\r\n    ngAfterViewInit(): void {\r\n        const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\r\n        // assin to extra variable for easier access\r\n        if (tempCanvasContext !== null) {\r\n            this._canvasContext = tempCanvasContext;\r\n        }\r\n    }\r\n\r\n    // fill the array with new Particles\r\n    fillParticleArray(xPos: number, yPos: number) {\r\n        for (let i = 0; i < 7; i++) {\r\n            const particle = new Particle(\r\n                xPos,\r\n                yPos,\r\n                Math.random() * 14 + 1,\r\n                Math.random() * 3 - 1.5,\r\n                Math.random() * 3 - 1.5,\r\n                0.1\r\n            );\r\n            this._particlesArray.push(particle);\r\n        }\r\n    }\r\n\r\n    // delete Particles wich habe become to small\r\n    emptyParticleArray() {\r\n        for (let i = 0; i < this._particlesArray.length; i++) {\r\n            const particle = this._particlesArray[i];\r\n            if (particle.size < 2) {\r\n                this._particlesArray.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    //draw the rectangle on the canvas\r\n    drawRectOnCanvas() {\r\n        this._particlesArray.forEach((particle) => {\r\n            particle.update();\r\n            particle.draw(this._canvasContext);\r\n        });\r\n    }\r\n\r\n    // clear the canvas to draw something new\r\n    clearCanvas() {\r\n        this._canvasContext.clearRect(\r\n            0,\r\n            0,\r\n            this.canvasRef.nativeElement.width,\r\n            this.canvasRef.nativeElement.height\r\n        );\r\n    }\r\n\r\n    //run async while until array is empty\r\n    async clearParticles() {\r\n        while (this._particlesArray.length !== 0) {\r\n            this.clearCanvas();\r\n            this.drawRectOnCanvas();\r\n            this.emptyParticleArray();\r\n            await new Promise((f) => setTimeout(f, 6));\r\n            // just for safety\r\n            if (this._particlesArray.length === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // user can decide if mouse effects are wished\r\n    toggleMouseEffect() {\r\n        this.allowMouseEffect = !this.allowMouseEffect;\r\n        this.clearParticles();\r\n    }\r\n\r\n    // every once and while empty the particleArray\r\n    @HostListener(\"window:scroll \", [\"$event\"])\r\n    @HostListener(\"document:keydown\", [\"$event\"])\r\n    @HostListener(\"document:mouseleave\", [\"$event\"])\r\n    @HostListener(\"document:mousedown\", [\"$event\"])\r\n    dissolveMouseEffects() {\r\n        this.clearParticles();\r\n    }\r\n\r\n    // look out for mousemovements\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.allowMouseEffect) {\r\n            if (this.canvasRef !== null) {\r\n                // make canvas fit better\r\n                this.canvasRef.nativeElement.width = window.innerWidth;\r\n                this.canvasRef.nativeElement.height = window.innerHeight;\r\n            }\r\n            if (this._canvasContext !== null) {\r\n                // important clear first, then draw\r\n                const correctionX = 165;\r\n                const correctionY = 120;\r\n                this.clearCanvas();\r\n                this.fillParticleArray(\r\n                    event.x - correctionX,\r\n                    event.y - correctionY\r\n                );\r\n                this.drawRectOnCanvas();\r\n                this.emptyParticleArray();\r\n            }\r\n        }\r\n    }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n               [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n               [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n               [opened]=\"(isHandset$ | async) === false\">\n\n    <mat-toolbar id=\"about-me\">AboutMe()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"about-me/intro\"><mat-icon>face</mat-icon> &nbsp; introduction</a>\n      <a mat-list-item routerLink=\"about-me/knowlege\"><mat-icon>memory</mat-icon>&nbsp; knowlege</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"load-portfolio\">LoadPortfolio()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"load-portfolio/projects\"><mat-icon>folder_open</mat-icon>&nbsp; projects</a>\n      <a mat-list-item routerLink=\"#\"><mat-icon>priority_high</mat-icon>&nbsp; ...</a>\n    </mat-nav-list>\n\n    <mat-toolbar id=\"activate-fun\">HaveFun()</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"have-fun/move-io\"><mat-icon>casino</mat-icon>&nbsp; Move.IO</a>\n    </mat-nav-list>\n\n\n    <button mat-button\n            id=\"toggle-mouse-effect\"\n            (click)=\"toggleMouseEffect()\">\n      toggle-mouse-effect\n    </button>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"side-nav-header\">\n    <mat-toolbar>\n\n      <button type=\"button\"\n              aria-label=\"Toggle sidenav\"\n              mat-icon-button\n              (click)=\"drawer.toggle()\"\n              *ngIf=\"isHandset$ | async\"\n              class=\"side-nav-header\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span id=\"under-header\">/* &nbsp; TODO: click left to discover more &nbsp; */</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <!-- ROUTER -->\n    <div class=\"router\">\n      <canvas #canvasRef></canvas>\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n"]},"metadata":{},"sourceType":"module"}