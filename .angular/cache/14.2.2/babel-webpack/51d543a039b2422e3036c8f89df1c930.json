{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Tahaa/Desktop/ProgrammData/GIT_REPOS/t-al-d-WebPortfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ElementRef } from \"@angular/core\";\nimport { ChildrenOutletContexts } from \"@angular/router\";\nimport { Particle } from \"./Particles\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/button\";\nconst _c0 = [\"canvasRef\"];\nexport class MainRouterComponent {\n  constructor(contexts) {\n    this.contexts = contexts;\n    this.particlesArray = [];\n    this.allowMouseEffect = true;\n  } //ROUTING ANIMTIONS\n\n\n  getRouteAnimationData() {\n    return this.contexts.getContext('primary')?.route?.snapshot?.data?.['animation'];\n  } // after the view has been loaded or else exception gets thrown\n\n\n  ngAfterViewInit() {\n    const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\"); // assin to extra variable for easier access\n\n    if (tempCanvasContext !== null) {\n      this.canvasContext = tempCanvasContext;\n    }\n  } // fill the array with new Particles\n\n\n  fillParticleArray(xPos, yPos) {\n    for (let i = 0; i < 7; i++) {\n      const particle = new Particle(xPos, yPos, Math.random() * 14 + 1, Math.random() * 3 - 1.5, Math.random() * 3 - 1.5, 0.1);\n      this.particlesArray.push(particle);\n    }\n  } // delete Particles wich habe become to small\n\n\n  emptyParticleArray() {\n    for (let i = 0; i < this.particlesArray.length; i++) {\n      const particle = this.particlesArray[i];\n\n      if (particle.size < 2) {\n        this.particlesArray.splice(i, 1);\n      }\n    }\n  } //draw the rectangle on the canvas\n\n\n  drawRectOnCanvas() {\n    this.particlesArray.forEach(particle => {\n      particle.update();\n      particle.draw(this.canvasContext);\n    });\n  } // clear the canvas to draw something new\n\n\n  clearCanvas() {\n    this.canvasContext.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n  } //run async while until array is empty\n\n\n  clearParticles() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (_this.particlesArray.length !== 0) {\n        _this.clearCanvas();\n\n        _this.drawRectOnCanvas();\n\n        _this.emptyParticleArray();\n\n        yield new Promise(f => setTimeout(f, 5)); // just for safety\n\n        if (_this.particlesArray.length === 0) {\n          break;\n        }\n      }\n    })();\n  } // user can decide if mouse effects are wished\n\n\n  toggleMouseEffect() {\n    this.allowMouseEffect = !this.allowMouseEffect;\n    this.clearParticles();\n  } // every once and while empty the particleArray\n\n\n  dissolveMouseEffects() {\n    this.clearParticles();\n  } // look out for mousemovements\n\n\n  onMouseMove(event) {\n    if (this.allowMouseEffect) {\n      if (this.canvasRef !== null) {\n        // make canvas fit better\n        this.canvasRef.nativeElement.width = this.canvasRef.nativeElement.offsetWidth;\n        this.canvasRef.nativeElement.height = this.canvasRef.nativeElement.offsetHeight;\n      }\n\n      if (this.canvasContext !== null) {\n        // important clear first, then draw\n        const correctionX = 165;\n        const correctionY = 120;\n        this.clearCanvas();\n        this.fillParticleArray(event.x - correctionX, event.y - correctionY);\n        this.drawRectOnCanvas();\n        this.emptyParticleArray();\n      }\n    }\n  }\n\n}\n\nMainRouterComponent.ɵfac = function MainRouterComponent_Factory(t) {\n  return new (t || MainRouterComponent)(i0.ɵɵdirectiveInject(i1.ChildrenOutletContexts));\n};\n\nMainRouterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MainRouterComponent,\n  selectors: [[\"app-main-router\"]],\n  viewQuery: function MainRouterComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n    }\n  },\n  hostBindings: function MainRouterComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function MainRouterComponent_scroll_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveWindow)(\"keydown\", function MainRouterComponent_keydown_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseleave\", function MainRouterComponent_mouseleave_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousedown\", function MainRouterComponent_mousedown_HostBindingHandler($event) {\n        return ctx.dissolveMouseEffects($event);\n      }, false, i0.ɵɵresolveDocument)(\"mousemove\", function MainRouterComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMove($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 6,\n  vars: 1,\n  consts: [[1, \"router\"], [\"canvasRef\", \"\"], [\"mat-button\", \"\", \"id\", \"toggle-mouse-effect\", 3, \"click\"]],\n  template: function MainRouterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"canvas\", null, 1)(3, \"router-outlet\");\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function MainRouterComponent_Template_button_click_4_listener() {\n        return ctx.toggleMouseEffect();\n      });\n      i0.ɵɵtext(5, \" toggle-mouse-effect \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@routeAnimations\", ctx.getRouteAnimationData());\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.MatButton],\n  styles: [\".router[_ngcontent-%COMP%] {\\n  margin-left: 4px;\\n  margin-right: 4px;\\n}\\n\\n  .router[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n    position: fixed;\\n    z-index: -1;\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n  #toggle-mouse-effect[_ngcontent-%COMP%] {\\n  z-index: 2;\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  text-align: start;\\n  font-weight: bold;\\n  height: 1.5rem;\\n  width: 9.5rem;\\n  line-height: 1.3rem;\\n  color: #000000;\\n  background: linear-gradient(-45deg, #fcfe2c, #56ee10, #af06d0);\\n  border: 3px solid #12a5a2;\\n}\\n\\n  #toggle-mouse-effect[_ngcontent-%COMP%]:hover {\\n    box-shadow: inset 0 0 0 0.2rem #ffffff;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4tcm91dGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztFQUVFO0lBQ0UsZUFBZTtJQUNmLFdBQVc7SUFDWCxXQUFXO0lBQ1gsWUFBWTtFQUNkOztFQUVGO0VBQ0UsVUFBVTtFQUNWLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsY0FBYztFQUNkLDhEQUE4RDtFQUM5RCx5QkFBeUI7QUFDM0I7O0VBRUU7SUFDRSxzQ0FBc0M7RUFDeEMiLCJmaWxlIjoibWFpbi1yb3V0ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3V0ZXIge1xuICBtYXJnaW4tbGVmdDogNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDRweDtcbn1cblxuICAucm91dGVyIGNhbnZhcyB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4jdG9nZ2xlLW1vdXNlLWVmZmVjdCB7XG4gIHotaW5kZXg6IDI7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBoZWlnaHQ6IDEuNXJlbTtcbiAgd2lkdGg6IDkuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuM3JlbTtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgtNDVkZWcsICNmY2ZlMmMsICM1NmVlMTAsICNhZjA2ZDApO1xuICBib3JkZXI6IDNweCBzb2xpZCAjMTJhNWEyO1xufVxuXG4gICN0b2dnbGUtbW91c2UtZWZmZWN0OmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAwLjJyZW0gI2ZmZmZmZjtcbiAgfVxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["ElementRef","ChildrenOutletContexts","Particle","MainRouterComponent","constructor","contexts","getRouteAnimationData","getContext","route","snapshot","data","ngAfterViewInit","tempCanvasContext","canvasRef","nativeElement","canvasContext","fillParticleArray","xPos","yPos","i","particle","Math","random","particlesArray","push","emptyParticleArray","length","size","splice","drawRectOnCanvas","forEach","update","draw","clearCanvas","clearRect","width","height","clearParticles","Promise","f","setTimeout","toggleMouseEffect","allowMouseEffect","dissolveMouseEffects","onMouseMove","event","offsetWidth","offsetHeight","correctionX","correctionY","x","y","i0","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\main-router\\main-router.component.ts","C:\\Users\\Tahaa\\Desktop\\ProgrammData\\GIT_REPOS\\t-al-d-WebPortfolio\\src\\app\\main-router\\main-router.component.html"],"sourcesContent":["import {\r\n    AfterViewInit,\r\n    Component,\r\n    ElementRef,\r\n    HostListener,\r\n    ViewChild,\r\n} from \"@angular/core\";\r\nimport { ChildrenOutletContexts, RouterOutlet } from \"@angular/router\";\r\nimport { Particle } from \"./Particles\";\r\n\r\n@Component({\r\n    selector: \"app-main-router\",\r\n    templateUrl: \"./main-router.component.html\",\r\n    styleUrls: [\"./main-router.component.css\"],\r\n})\r\nexport class MainRouterComponent implements AfterViewInit {\r\n  constructor(private contexts: ChildrenOutletContexts) {\r\n}\r\n\r\n    //ROUTING ANIMTIONS\r\n  getRouteAnimationData() {\r\n    return this.contexts.getContext('primary')?.route?.snapshot?.data?.['animation'];\r\n  }\r\n\r\n    // RAINBOW MOUSEMOUVE\r\n    // Access to a certain element in the DOM\r\n    @ViewChild(\"canvasRef\")\r\n    canvasRef!: ElementRef<HTMLCanvasElement>;\r\n\r\n    // variables needed\r\n    private canvasContext!: CanvasRenderingContext2D;\r\n    private particlesArray: Array<Particle> = [];\r\n    private allowMouseEffect = true;\r\n\r\n    // after the view has been loaded or else exception gets thrown\r\n    ngAfterViewInit(): void {\r\n        const tempCanvasContext = this.canvasRef.nativeElement.getContext(\"2d\");\r\n        // assin to extra variable for easier access\r\n        if (tempCanvasContext !== null) {\r\n            this.canvasContext = tempCanvasContext;\r\n        }\r\n    }\r\n\r\n    // fill the array with new Particles\r\n    fillParticleArray(xPos: number, yPos: number) {\r\n        for (let i = 0; i < 7; i++) {\r\n            const particle = new Particle(\r\n                xPos,\r\n                yPos,\r\n                Math.random() * 14 + 1,\r\n                Math.random() * 3 - 1.5,\r\n                Math.random() * 3 - 1.5,\r\n                0.1\r\n            );\r\n            this.particlesArray.push(particle);\r\n        }\r\n    }\r\n\r\n    // delete Particles wich habe become to small\r\n    emptyParticleArray() {\r\n        for (let i = 0; i < this.particlesArray.length; i++) {\r\n            const particle = this.particlesArray[i];\r\n            if (particle.size < 2) {\r\n                this.particlesArray.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    //draw the rectangle on the canvas\r\n    drawRectOnCanvas() {\r\n        this.particlesArray.forEach((particle) => {\r\n            particle.update();\r\n            particle.draw(this.canvasContext);\r\n        });\r\n    }\r\n\r\n    // clear the canvas to draw something new\r\n    clearCanvas() {\r\n        this.canvasContext.clearRect(\r\n            0,\r\n            0,\r\n            this.canvasRef.nativeElement.width,\r\n            this.canvasRef.nativeElement.height\r\n        );\r\n    }\r\n\r\n    //run async while until array is empty\r\n    async clearParticles() {\r\n        while (this.particlesArray.length !== 0) {\r\n            this.clearCanvas();\r\n            this.drawRectOnCanvas();\r\n            this.emptyParticleArray();\r\n            await new Promise((f) => setTimeout(f, 5));\r\n            // just for safety\r\n            if (this.particlesArray.length === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // user can decide if mouse effects are wished\r\n    toggleMouseEffect() {\r\n        this.allowMouseEffect = !this.allowMouseEffect;\r\n        this.clearParticles();\r\n    }\r\n\r\n    // every once and while empty the particleArray\r\n    @HostListener(\"window:scroll \", [\"$event\"])\r\n    @HostListener(\"document:keydown\", [\"$event\"])\r\n    @HostListener(\"document:mouseleave\", [\"$event\"])\r\n    @HostListener(\"document:mousedown\", [\"$event\"])\r\n    dissolveMouseEffects() {\r\n        this.clearParticles();\r\n    }\r\n\r\n    // look out for mousemovements\r\n    @HostListener(\"document:mousemove\", [\"$event\"])\r\n    onMouseMove(event: MouseEvent) {\r\n        if (this.allowMouseEffect) {\r\n            if (this.canvasRef !== null) {\r\n                // make canvas fit better\r\n                this.canvasRef.nativeElement.width =\r\n                    this.canvasRef.nativeElement.offsetWidth;\r\n                this.canvasRef.nativeElement.height =\r\n                    this.canvasRef.nativeElement.offsetHeight;\r\n            }\r\n            if (this.canvasContext !== null) {\r\n                // important clear first, then draw\r\n                const correctionX = 165;\r\n                const correctionY = 120;\r\n                this.clearCanvas();\r\n                this.fillParticleArray(\r\n                    event.x - correctionX,\r\n                    event.y - correctionY\r\n                );\r\n                this.drawRectOnCanvas();\r\n                this.emptyParticleArray();\r\n            }\r\n        }\r\n    }\r\n}\r\n","<div class=\"router\"\n     [@routeAnimations]=\"getRouteAnimationData()\">\n  <canvas #canvasRef></canvas>\n  <router-outlet></router-outlet>\n  <button mat-button\n          id=\"toggle-mouse-effect\"\n          (click)=\"toggleMouseEffect()\">\n    toggle-mouse-effect\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module"}